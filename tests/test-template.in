#! /bin/sh

if test -d ../fw/bin  
  then
    PATH="`pwd`/../fw/bin:$PATH"
    export PATH
  fi

# fix for newer automake which doesn't seem to work well when called
# recursively.
# what was happening is that the TEST_LOGS at the top level were sent
# to sub-levels and caused errors like
#
# fatal: making test-suite.log: failed to create test-canonicalize-package.trs
# fatal: making test-suite.log: failed to create test-canonicalize-package.log
#
# so this fixes that by zeroing out the TEST_LOGS
MAKEFLAGS=`echo "$MAKEFLAGS" | perl -pe 's/TEST_LOGS=([^=]*)/TEST_LOGS=/'`
export MAKEFLAGS
(
set -x
rm -rf cvstmp
mkdir cvstmp
( 
  cd cvstmp &&
  cvs -d "`pwd`" init
)
test -h fw.local || ln -sf ../fw.local fw.local || exit 1
test -h share || ln -sf .. share || exit 1
CVSROOT="`pwd`/cvstmp"
export CVSROOT
testsdir="`pwd`"
rm -rf megatmp
{ 
  mkdir megatmp &&
  cd megatmp &&
  env FW_ROOT="$testsdir"                               \
  fw-init --name tmp                                    \
          --revision cvs                                \
          --template erlang 
} || exit 1
cd tmp
rm -f fw
mkdir fw
cwd=`pwd`
mkdir fw/bin
cp `env PATH="../../../fw/bin:$PATH" which fw-bootstrap` fw/bin
cp `env PATH="../../../fw/bin:$PATH" which fw-exec` fw/bin
cp `env PATH="../../../fw/bin:$PATH" which fw-init` fw/bin
cp `env PATH="../../../fw/bin:$PATH" which fw-package` fw/bin
(cd "../../../fw"; find . -print | cpio -pud "$cwd/fw")
(cd "../../../fw.local"; find template -print | cpio -pud "$cwd/fw")
(cd "../../../fw.local"; find m4 -print | cpio -pud "$cwd/fw")

# disable the addition of fw-template-erlang to the BUILD_DEPENDS since it 
# will not be installed at this point
perl -pi -e 's/^.*fw-template-erlang.*$//g' fw/template/erlang/load-config

( cvs -n -q up | grep '^?' ) && exit 1
./bootstrap || exit 1
( cvs -n -q up | grep '^?' ) && exit 1
./build || exit 1
( cvs -n -q up | grep '^?' ) && exit 1
diff -q ../../tmp.app src/tmp.app || exit 1
touch src/.dialyzer_ok
"@GMAKE@" -s check || exit 1
( cvs -n -q up | grep '^?' ) && exit 1

if test "@FW_NATIVE_PACKAGE_TYPE@" != none
  then
    "@GMAKE@" "package-@FW_NATIVE_PACKAGE_TYPE@" || exit 1
    ( cvs -n -q up | grep '^?' | grep -v fw.local ) && exit 1
    fw-exec template/erlang/release-ok || exit 1
    echo "dild" > src/tmp.app
    fw-exec template/erlang/release-ok && exit 1
  fi

erl -noshell -noinput -eval "{ ok, { myapp, [ '0.0.0' ] } } = beam_lib:version (\"src/myapp.beam\")" -s erlang halt || exit 1

perl -i -pe 'm%-behaviour% && print "-vsn (flass).\n"' src/myapp.erl || exit 1
(cd src && "@GMAKE@") || exit 1

erl -noshell -noinput -eval "{ ok, { myapp, [ flass ] } } = beam_lib:version (\"src/myapp.beam\")" -s erlang halt || exit 1

"@GMAKE@" -s maintainer-clean
rm -rf fw
( cvs -n -q up | grep '^?' ) && exit 1
test -z "`find . -name '*.am'`" || exit 1
) > test-template.out 2>&1 || exit 1

rm fw.local
rm share
rm -rf megatmp
rm -rf cvstmp
