erlappdir="@ERLAPPDIR@"
erlappsrcdir="$(erlappdir)/src"
erlappebindir="$(erlappdir)/ebin"
erlappprivdir="$(erlappdir)/priv"
erlappincludedir="$(erlappdir)/include"
erldocdir="@ERLDOCDIR@"

SUFFIXES = .beam .erl .P .E .S .yrl .xrl

FW_ERLCFLAGS = +debug_info +bin_opt_info -pa "$(FW_ROOT)/share/fw/template/erlang/" -pa "$(FW_ROOT)/share/fw.local/template/erlang" -pa "$(top_srcdir)/fw/template/erlang/" -pa "$(top_srcdir)/fw.local/template/erlang" -pa ../src -I ../src +'{ parse_transform, vsn_trans }' +"{ fw_package_version, '@FW_PACKAGE_VERSION@' }" +'{ parse_transform, oldrecord_trans }' @FW_EUNIT_ERLCFLAGS@

ERLCFLAGS ?= $(FW_ERLCFLAGS)

DIALYZERFLAGS := $(DIALYZERFLAGS)
DIALYZERFLAGS += @FW_EUNIT_ERLCFLAGS@

LEEX_OPTIONS = @FW_LEEX_OPTIONS@
YECC_OPTIONS = @FW_YECC_OPTIONS@

# put an overly broad dependency on .hrl for now, 
# which will cause some spurious extra compiles
# TODO: depgen for erlang

%.beam: %.erl $(wildcard *.hrl)
	erlc ${ERLCFLAGS} ${$*_ERLCFLAGS} $<

%.P: %.erl $(wildcard *.hrl)
	erlc +"'P'" ${ERLCFLAGS} ${$*_ERLCFLAGS} $<

%.E: %.erl $(wildcard *.hrl)
	erlc +"'E'" ${ERLCFLAGS} ${$*_ERLCFLAGS} $<

%.S: %.erl $(wildcard *.hrl)
	erlc +"'S'" ${ERLCFLAGS} ${$*_ERLCFLAGS} $<

.%.beam_ok: %.beam
	dialyzer -o ../tests/dialyzer.log ${DIALYZERFLAGS} ${$*_DIALYZERFLAGS} -c $*.beam
	cat ../tests/dialyzer.log
	touch $@

.%.erl_ok: %.erl
	dialyzer -o ../tests/dialyzer.log ${DIALYZERFLAGS} ${$*_DIALYZERFLAGS} -c $*.erl
	cat ../tests/dialyzer.log
	touch $@

.%.app_ok: %.app
	@savedir="`pwd`";						\
	cd @top_srcdir@ && {						\
          if test -d fw/bin;                    			\
            then                                			\
              PATH="`pwd`/fw/bin:$$PATH";       			\
              export PATH;                      			\
	      FW_ROOT="`pwd`/fw";					\
	      export FW_ROOT;						\
	      (cd fw && ln -sf .. share);				\
            fi;                                 			\
        };								\
	cd $$savedir && fw-exec template/erlang/check-app-file $<
	@touch $@

%.erl : %.xrl
	erl -noshell -eval "leex:file(\"$<\", [${LEEX_OPTIONS}]), halt()"

%.erl : %.yrl
	erl -noshell -eval "yecc:file(\"$<\", [${YECC_OPTIONS}]), halt()"


.PHONY: check-script-escript-%
check-script-escript-%:
	escript -s $*

.dialyzer_ok: $(wildcard *.erl)
	dialyzer -o ../tests/dialyzer.log ${DIALYZERFLAGS} --src -c .
	cat ../tests/dialyzer.log
	touch $@

CLEANFILES +=			\
  $(wildcard *.P)		\
  $(wildcard .*.app_ok)		\
  $(wildcard *.beam)		\
  $(wildcard .*.beam_ok)	\
  $(wildcard .*.erl_ok)		\
  $(patsubst %.xrl,%.erl,$(wildcard *.xrl)) \
  $(patsubst %.yrl,%.erl,$(wildcard *.yrl)) \
  .dialyzer_ok			\
  erl_crash.dump
